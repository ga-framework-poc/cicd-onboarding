name: 'onboard-system'
on:
  workflow_dispatch:
    inputs:
      system-name:
        description: 'system-name: Name of the system to be onboarded and managed by the CICD system'
        required: true
env:
  SYSTEM_NAME: ${{ github.event.inputs.system-name }}
jobs:
  gather-system-info:
    runs-on: ubuntu-latest
    steps:
    - id: setup-environment
      name: setup-environment
      uses: hippyod/cicd-manager/run-step@development
      with:
        label: init
        step-name: setup-environment
    - id: clone-cicd-onboarding-repo
      name: clone-cicd-onboarding-repo
      uses: actions/checkout@v2
      with:
        ref: development
        path: ${{ env.CICD_REPO_ONBOARDING_DIR }}
    - id: clone-cicd-manager-repo
      name: clone-cicd-manager-repo
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner	}}/${{ env.CICD_MANAGER }}
        ref: development
        path: ${{ env.CICD_REPO_MGR_DIR }}
    - id: parse-system-def
      name: parse-system-def
      uses: hippyod/cicd-manager/run-step@development
      with:
        label: init
        step-name: parse-system-def
    outputs:
      TEAM_NAME: ${{ env.TEAM_NAME }}
      DEV_BRANCH: ${{ env.DEV_BRANCH }}
      REPO_NAMES: ${{ env.REPO_NAMES }}
      CICD_REPO_ONBOARDING_DIR: ${{ env.CICD_REPO_ONBOARDING_DIR }}
      DEV_ENVIRONMENT: ${{ env.DEV_ENVIRONMENT }}
      DEV_RESOURCEQUOTA: ${{ env.DEV_ENVIRONMENT }}
      TEST_ENVIRONMENTS: ${{ env.TEST_ENVIRONMENTS }}
      RESOURCE_QUOTAS: ${{ env.RESOURCE_QUOTAS }}
  configure-sdlc-environments:
    runs-on: ubuntu-latest
    needs: gather-system-info
    env:
      SYSTEM_NAME: ${{ github.event.inputs.system-name }}
      TEAM_NAME: ${{ needs.gather-system-info.outputs.TEAM_NAME }}
      DEV_ENVIRONMENT: ${{ needs.gather-system-info.outputs.DEV_ENVIRONMENT }}
      DEV_RESOURCEQUOTA: ${{ needs.gather-system-info.outputs.DEV_ENVIRONMENT }}
      TEST_ENVIRONMENTS: ${{ needs.gather-system-info.outputs.TEST_ENVIRONMENTS }}
      RESOURCE_QUOTAS: ${{ needs.gather-system-info.outputs.RESOURCE_QUOTAS }}
    steps:
    - id: oc-login
      name: oc-login
      run: |
        oc login --insecure-skip-tls-verify -u ${{ secrets.OCP_USER }} -p ${{ secrets.OCP_CREDS }} ${{ secrets.OCP_URL }}
    - id: configure-sdlc-environments
      name: configure-sdlc-environments
      uses: hippyod/cicd-manager/run-step@development
      with:
        label: infra
        step-name: configure-sdlc-environments
  onboard-system:
    runs-on: ubuntu-latest
    needs: gather-system-info
    env:
      CICD_REPO_ONBOARDING_DIR: ${{ needs.gather-system-info.outputs.CICD_REPO_ONBOARDING_DIR }}
      DEV_BRANCH: ${{ needs.gather-system-info.outputs.DEV_BRANCH }}
      TEAM_NAME: ${{ needs.gather-system-info.outputs.TEAM_NAME }}
    strategy:
      matrix:
        REPO_NAMES: ${{ fromJSON(needs.gather-system-info.outputs.REPO_NAMES) }}
    steps:
      - id: setup-environment
        name: setup-environment
        run: |
          set -ex
          echo "WORKING_DIR=${GITHUB_WORKSPACE}/${{ matrix.REPO_NAMES }}" >> ${GITHUB_ENV}
          set +ex
      - id: clone-cicd-onboarding-repo
        name: clone-cicd-onboarding-repo
        uses: actions/checkout@v2
        with:
          ref: development
          path: ${{ env.CICD_REPO_ONBOARDING_DIR }}
      - id: clone-app-repo
        name: clone-app-repo
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.REPO_NAMES }}
          ref: ${{ env.DEV_BRANCH }}
          path: ${{ env.WORKING_DIR }}
          token: ${{ secrets.ONBOARDING_CREDS }}
      - id: install-github-workflow-directory
        name: install-github-workflow-directory
        run: |
          set -ex

          echo 'Generating build.yml for ${{ matrix.REPO_NAMES }}'
          for F_NAME in $(find ${CICD_REPO_ONBOARDING_DIR}/.github-app-template/workflows -name "*.yml" -or -name "*.yaml")
          do
              mv ${F_NAME} $(echo ${F_NAME} | sed -e "s/.yml$/-${TEAM_NAME}.yml/" -e "s/.yaml$/-${TEAM_NAME}.yaml/") ;
          done

          find ${CICD_REPO_ONBOARDING_DIR}/.github-app-template/workflows/ -type f \( -iname \*.yml -o -iname \*.yaml \) \
            -exec sed -i -e "s/%SYSTEM_NAME%/${SYSTEM_NAME}/g" \
                         -e "s/%TEAM_NAME%/${TEAM_NAME}/g" {} +

          cp -RT ${CICD_REPO_ONBOARDING_DIR}/.github-app-template ${WORKING_DIR}/.github

          git -C ${WORKING_DIR} add -u
          if [[ ! -z "$(git -C ${WORKING_DIR} status --porcelain)" ]]
          then
              git -C ${WORKING_DIR} config user.email ${cicd-team@my-org.com}
              git -C ${WORKING_DIR} config user.name ${GITHUB_ACTOR}
              git -C ${WORKING_DIR} add -A
              git -C ${WORKING_DIR} commit -am '[skip ci] installing latest cicd-manager GitHub Action Workflow(s)'
              git -C ${WORKING_DIR} push
              echo "Pushed ${WORKING_DIR}/.github to ${{ matrix.REPO_NAMES }}"
          else
              echo "${{ matrix.REPO_NAMES }} is unchanged.  Skipping..."
          fi

          set +ex
